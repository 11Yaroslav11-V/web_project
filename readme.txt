ТЗ:  Создать web-приложение "Библиотека игр"
Для реализации проекта:

1) создать БД games.db с применением ORM (sqlalchemy), в которой 5 сущностей: компании (company), жанры (genres), 
платформы (platforms) , года (years),игры (games) связаны между собой. 
Создать еще 2 сущности - пользователей(users) и заказы на публикацию игр (order_game).

2) предусмотреть регистрацию и авторизацию пользователей

Для пользователей библиотеки предусмотреть следующие возможности (п.3, 4, 5):

3) незарегистрированные пользователи должны видеть только некоторые факты о играх.


4) Зарегистрированные пользователи могут просматривать игр, видеть ссылки на скачивание этих игр и делать заказ на публикацию игры, которой пока нет в списке опубликованных.
Для удобства пользователей игры разделить по жанрам.
API - выгрузка всех заказов и отдельного заказа в формате json.

5) Администратор БД может осуществлять следующие функции:

Работа с играми: 
  - просматривать таблицы, добавлять: компании, жанры, плафтормы, года
  - добавлять/ редактировать/ удалять игры
  - загружать файлы изображений игр

Работа с заказами пользователей на публикацию игры(REST-API):
 1. Получать список всех заказов, информацию об одном заказе (запрос GET)
 2. Создавать новый заказ (запрос POST)
 3. Изменять статус заказа (запрос PUT). готово, в процессе - готовится к публикации, отказано - нет прав на публикацию игры.
 4. Удалять заказ (запрос DELETE)

Просто читать книги

6) Предусмотреть наличие тестов для API


ПРОЕКТ СОСТОИТ из следующих папок и файлов:
    
    data
               модели
       __all_models.py
       __init__.py
       company.py
       games.py
       db_session.py
       genres.py
       platforms.py
       years.py
       users.py
       ordering_books.py
               формы регистрации, авторизации, добавления информации в БД
       add_company.py
       add_game.py
       add_genre.py
       add_order.py
       add_platforms.py
       add_years.py
       login_form.py
       register_form.py
               REST-API для order_game.py и тесты
       api_test.py
       api_test2.py
       api_test3.py
       api_test4py
       order_game_api.py
    db
       games.db - база данных
    static
       css
       img   изображения - картинки игр и фото для карсуели
    templates     шаблоны
       add_company.html
       add_game.html
       add_genre.html
       add_order.html
       add_order_form.html
       add_platforms.html
       add_years.html
       base.html
       facts.html
       game_genre.html
       game_list.html
       index.html
       index_admin.html
       load_files.html
       login.html
       reg_member.html
       register.html
       view_game.html
    main.py
            
	


ЗАПУСК  -  main.py, переход на http://127.0.0.1:5000/

АГОРИТМ ДЕЙСТВИЙ ПОСЛЕ ЗАПУСКА ПРОГРАММЫ

1.Вы - незарегистрированный пользователь. Ваше меню:
   - Главная (вернет на ту же страницу)
   - Факты о книгах

2. Пройдите регистрацию, например:
   email: qwety@yandex.ru
   пароль: 2213
   имя: Второй пользователь

3. Авторизуйтесь с этим e-mail и паролем

4. Вы - авторизованный пользователь - вы можете просматривать, скачивать и делать заказ на публикацию. 
   4.1 Ваше меню:
   - Главная
   - Список игр
   - Факты о играх
   - Заказ игру для публикации
   4.2 При выборе "Заказ игру" пользователь может
       - перейти на страницу заказа и заполнить предложенную форму (предварительно пользователю рекомендуют посмотреть,
         нет ли книги в отказанных для публикации или находящихся в работе). Пример заказа:
         
         Компания: 4A GAMES
         Название игры: Metro 2033
         Статус: заказ
       - у пользователя есть также возможность посмотреть таблицу заказов в формате json

5. Выйдите, щелкнув по Второй пользователь, Выход в правом верхнем углу

6. Авторизуйтесь как Администратор БД (id=1 в таблице users):
   email: vinograda80@gmail.ru
   пароль: K5L-BZu-eYr-95h

7. Возможности Администратора БД:
   а) Просмотр таблицы и добавление компаний в таблицу company
   б) Просмотр таблицы и добавление жанра в таблицу genres
   в) Просмотр таблицы и добавление платформы в таблицу platforms
   г) Просмотр таблицы и добавление годов в таблицу years
	(компанию, жанр, платформу, год добавьте любые)
   д) Добавление/ редактирование/ удаление игры (таблица games):

      - Просмотр таблицы games (игры) с возможностью редактирования и удаления записей
      - Загрузка файлов изображений для таблицы games (игры) (размер изображений при сохранении будет изменен на 300 х 280)


      - Добавление игры в таблицу games:
        id года выпуска: 5
        название игры: Far cry 4
        id компании: 2
        id жанра: 1
        age_restriction: 17+        
	id платформы: 6
	link: https://store.steampowered.com/app/298110/Far_Cry_4/
        имя файла: 11.jpg

    е)Работа с таблицей заказов игр на публикацию (REST-API)
       - Получить список всех заказов, информацию об одном заказе (запрос GET)
             тест: data/api_test1.py
      - Создать новый заказ (запрос POST)
              тест: data/api_test2.py
      - Изменить статус заказа (запрос PUT)
         готово - игра опубликована; в процесссе - будет опубликована скоро; отказ - нет прав на публикацию игры
            тест: data/api_test3.py
      - Удалить заказ (запрос DELETE)
             тест: data/api_test4_.py


      



       

